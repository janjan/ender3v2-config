# This file contains settings for my modified ender 3 v2. It is bases on the example config of the SKR Pico
# 
# Mods:
#
# SKR Pico board + Raspberry Pi 4b
# BL Touch 3.1
# Bondtech LGX in direct drive
# Slice engineering heatbreak
# 2nd z axis
# magnetic PEI bed

[include mainsail.cfg]

[include KAMP_Settings.cfg]
[include ./KAMP/Adaptive_Meshing.cfg]

[exclude_object]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_rp2040_45503571280B4DB8-if00
# restart_method: command

[printer]
kinematics: cartesian
max_velocity: 150
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[neopixel board_neopixel]
pin: gpio24
chain_count: 1
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.5
initial_BLUE: 0.0

[safe_z_home]
home_xy_position: 120, 120
speed: 50
z_hop: 10          
z_hop_speed: 5

#####################################################################
# EXTRUDER EXTRUDER EXTRUDER EXTRUDER
# EXTRUDER EXTRUDER EXTRUDER EXTRUDER
# EXTRUDER EXTRUDER EXTRUDER EXTRUDER

[extruder]
step_pin: gpio14
dir_pin: !gpio13
enable_pin: !gpio15
# the LGX has '1.8 deg per step' / '200 steps per rotation' and '16 microsteps'
# https://www.bondtech.se/product/lgx-large-gears-extruder/ click on "tecnical details"
full_steps_per_rotation: 200
microsteps: 16
# 'rotation_distance' is the distance which the axis travels for a full rotation. in case
# of an extruder it is the amount of filament which is extruded in one rotation
#
# formula:
#
# rotation_distance = full_steps_per_rotation * microsteps / steps_per_mm
#
# Bondtech says that steps_per_mm should be 400 but in practice it is 410-420
#
# e steps | rotation distance
# ---------------------------
# 400     | 8.0000
# 401     | 7.9800
# 402     | 7.9602
# 403     | 7.9404
# 404     | 7.9208
# 405     | 7.9012
# 406     | 7.8818
# 407     | 7.8624
# 408     | 7.8431
# 409     | 7.8240
# 410     | 7.8049
# 411     | 7.7859
# 412     | 7.7670
# 413     | 7.7482
# 414     | 7.7295
# 415     | 7.7108
# 416     | 7.6923
# 417     | 7.6739
# 418     | 7.6555
# 419     | 7.6372
# 420     | 7.6190
# 421     | 7.6010
# 422     | 7.5829
# 423     | 7.5650
# 424     | 7.5472
# 425     | 7.5294
# 426     | 7.5117
# 427     | 7.4941
# 428     | 7.4766
# 429     | 7.4592
# 430     | 7.4419
#
# for my personal setup it seems to be 415-420 steps per mm
rotation_distance: 7.6

nozzle_diameter: 0.4
filament_diameter: 1.750

heater_pin: gpio23
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: gpio27

min_temp: 0
max_temp: 250

# i use 150 mm to calibrate my esteps so i need to raise this limit
max_extrude_only_distance: 160

# this is here because i got a error: "Move exceeds maximum extrusion (106.901mm^2 vs 0.640mm^2)""
max_extrude_cross_section: 110.0

# pressure advance is not set via orca slicer
# pressure_advance=0.0575

# calibrate with:
# PID_CALIBRATE HEATER=extruder TARGET=220
# warning: calibration did not work when check_gain_time in verify_heater was set to 20
control: pid
# old values from stock ender 3 v2 hotend
# pid_Kp=25.642 
# pid_Ki=1.230 
# pid_Kd=133.660

# values for revo
pid_Kp=38.785 
pid_Ki=6.156 
pid_Kd=61.086

[verify_heater extruder]
# default valie: 20
# i had some problems with the default value of 20because the heater cardridge seems to be too weak
# increasing the time to 30 fixed the PID calibration
check_gain_time: 30

[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

#####################################################################
# FAN FAN FAN FAN FAN FAN FAN FAN
# FAN FAN FAN FAN FAN FAN FAN FAN
# FAN FAN FAN FAN FAN FAN FAN FAN

# gpio17 is mainboard cooling
# gpio18 is heatbreak cooling
# gpio20 is part cooling

[fan]
pin: gpio20 #part cooling

[heater_fan heatbreak_cooling_fan]
pin: gpio18 # heatbreak

[heater_fan mainboard_fan]
pin: gpio17 # mainboard

#####################################################################
# BED BED BED BED BED BED BED
# BED BED BED BED BED BED BED
# BED BED BED BED BED BED BED

[heater_bed]
heater_pin: gpio21
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio26

min_temp: 0
max_temp: 100

# calibrate with:
# PID_CALIBRATE HEATER=heater_bed TARGET=60
control: pid
pid_kp = 71.053
pid_ki = 1.323
pid_kd = 953.883

###########################################################################################
###########################################################################################
# BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH 
# BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH 
# BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH 
# BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH BL TOUCH 
# note: 
# in the official skr pico docu pdf the sensor pin definition is just gpio22. But it turns out it must be ^gpio22
# (i use an original 3.1 BL Touch. Older versions or clones might need a different config)
[bltouch]
sensor_pin: ^gpio22
control_pin: gpio29
x_offset: -15
y_offset: -25
z_offset: 2.895

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 20, 20
mesh_max: 190, 210
probe_count: 6, 6
algorithm: bicubic

# use BED_SCREWS_ADJUST to do simple manual leven
[bed_screws]
screw1: 30, 30
screw2: 30, 180
screw3: 180, 30
screw4: 180, 180

# Do G28 and then SCREWS_TILT_CALCULATE
[screws_tilt_adjust]
screw1: 70, 37
screw1_name: left front
screw2: 70, 197
screw2_name: left rear
screw3: 230, 37
screw3_name: right front
screw4: 230, 197
screw4_name: right rear
horizontal_move_z: 15.0
speed: 50.0
screw_thread: CW-M3

# GCODE
# GCODE
# GCODE
[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro home_and_screw]
description: do home and then measure screws
gcode:
  CG28
  SCREWS_TILT_CALCULATE

#####################################################################
# XXXXXXXXXXXXXXXXXXX
# XXXXXXXXXXXXXXXXXXX
# XXXXXXXXXXXXXXXXXXX
[stepper_x]
step_pin: gpio11
dir_pin: !gpio10
enable_pin: !gpio12
microsteps: 16
rotation_distance: 40
endstop_pin: ^gpio4
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

#####################################################################
# YYYYYYYYYYYYYYYYYYY
# YYYYYYYYYYYYYYYYYYY
# YYYYYYYYYYYYYYYYYYY
[stepper_y]
step_pin: gpio6
dir_pin: !gpio5
enable_pin: !gpio7
microsteps: 16
rotation_distance: 40
endstop_pin: ^gpio3
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999

#####################################################################
# ZZZZZZZZZZZZZZZZZZZ
# ZZZZZZZZZZZZZZZZZZZ
# ZZZZZZZZZZZZZZZZZZZ
[stepper_z]
step_pin: gpio19
dir_pin: gpio28
enable_pin: !gpio2
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 150
# tiny bit of wiggle room toadjust the z-offset
position_min = -0.1

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999

